J1 : 
	Prise en main de Git
	Prise en main des fichiers fournis
	Complétion de memory.c & arm_instruction.c
	
J2 :
	arm_data_processing : décodage des instructions, des registres / valeurs immédiates
	arm_branch_other : implémentation des instructions B, BL et MRS
	arm_load_store : debut de l'implementation de LDR / STR
	Debut de création de tests
	
J3 :
	arm_core : ajout de la màj des flags
	arm_instruction : ajout du calcul de la 2nde opérande
	arm_load_store : implementation des 'load et store' sauf co-processeur
	util : ajout du shift avec calcul de C
	arm_load_store: implémentation de MSR
	Clean du git (.gitignore)
	Ajout d'exemple pour load/store et branchement
	
J4 :
	arm_data_processing : implémentation des instructions
	arm_load_store: factorisation du code


J5 :
	Mise en commun du code, nettoyage et débogage
	Ajout d'exemple pour data_processing

J6 :
	Début des tests/correction de bug
	
J7 :
	Ajout des interruptions & exceptions
	Suite des tests
	
J8 :
	Implémentation de tests pour les interruptions
	Fin des tests

J9 :
	Ajout de la prise en compte de la pile
	Préparation de la soutenance et du compte-rendu
	Ajout de programmes-tests(tri_insertion, pgdc, demoIntteruption)

J10 :
	Soutenance
	
	
Questions:
	1- On fait quoi pour les UNPREDICTABLE
	2- CP15_reg1_Ubit page 194 (voir ldr) => constantes à 1
	3- fonctionnement des exceptions et de IRQ
	4- fonctionnement coproc
